From d97d1a8edd7f7e5bc575a087aabc1b861f65180b Mon Sep 17 00:00:00 2001
From: HungTran <hung.tran.jy@rvc.renesas.com>
Date: Tue, 3 Jun 2014 18:03:38 +0700
Subject: [PATCH 11/22] Manually calculate timestamp if not provided

There is case when video does not provide timestamp or duration.
In that case, video will not played correctly.

refs #47155
Signed-off-by: HungTran <hung.tran.jy@rvc.renesas.com>
---
 omx/gstomxvideodec.c |   40 +++++++++++++++++++++++++---------------
 1 file changed, 25 insertions(+), 15 deletions(-)

diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index 39964ae..2ff2809 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -66,6 +66,7 @@ struct GstOMXBufferCallback
 static void GstOMXBufCallbackfunc (struct GstOMXBufferCallback *);
 
 #define GST_OMX_MEMORY_TYPE "openmax"
+#define DEFAULT_FRAME_PER_SECOND  30
 
 static GstMemory *
 gst_omx_memory_allocator_alloc_dummy (GstAllocator * allocator, gsize size,
@@ -2357,13 +2358,13 @@ gst_omx_video_dec_handle_frame (GstVideoDecoder * decoder,
     return GST_FLOW_OK;
   }
 
-  timestamp = frame->pts;
-  duration = frame->duration;
-  
   /* Workaround for timestamp issue */
-  if (!GST_CLOCK_TIME_IS_VALID (timestamp) &&
+  if (!GST_CLOCK_TIME_IS_VALID (frame->pts) &&
         GST_CLOCK_TIME_IS_VALID (frame->dts))
-    timestamp = frame->dts;
+    frame->pts = frame->dts;
+
+  timestamp = frame->pts;
+  duration = frame->duration;
 
   if (self->downstream_flow_ret != GST_FLOW_OK) {
     gst_video_codec_frame_unref (frame);
@@ -2520,20 +2521,29 @@ gst_omx_video_dec_handle_frame (GstVideoDecoder * decoder,
     }
 
     if (timestamp != GST_CLOCK_TIME_NONE) {
-      buf->omx_buf->nTimeStamp =
-          gst_util_uint64_scale (timestamp, OMX_TICKS_PER_SECOND, GST_SECOND);
       self->last_upstream_ts = timestamp;
     } else {
-      buf->omx_buf->nTimeStamp = 0;
+      /* Video stream does not provide timestamp, try calculate */
+      if (offset == 0) {
+        if (duration != GST_CLOCK_TIME_NONE )
+          /* In case timestamp is invalid. may use duration to calculate
+           * timestamp */
+          self->last_upstream_ts += duration;
+        else
+          /* Use default fps value as last resort */
+          self->last_upstream_ts += gst_util_uint64_scale (1,
+                GST_SECOND, DEFAULT_FRAME_PER_SECOND);
+
+        timestamp = self->last_upstream_ts;
+        frame->pts = timestamp;
+      }
     }
 
-    if (duration != GST_CLOCK_TIME_NONE && offset == 0) {
-      buf->omx_buf->nTickCount =
-          gst_util_uint64_scale (copysize, duration, size);
-      self->last_upstream_ts += duration;
-    } else {
-      buf->omx_buf->nTickCount = 0;
-    }
+    buf->omx_buf->nTimeStamp =
+      gst_util_uint64_scale (timestamp, OMX_TICKS_PER_SECOND, GST_SECOND);
+
+    buf->omx_buf->nTickCount =
+      gst_util_uint64_scale (copysize, duration, size);
 
     if (offset == 0) {
       BufferIdentification *id = g_slice_new0 (BufferIdentification);
-- 
1.7.9.5

