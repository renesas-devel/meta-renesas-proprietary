From 8a027db11db686ba4831482d663c14c8840cfffc Mon Sep 17 00:00:00 2001
From: HungTran <hung.tran.jy@rvc.renesas.com>
Date: Fri, 18 Apr 2014 08:49:14 +0700
Subject: [PATCH 03/22] Change ::reset to ::flush

From GStreamer 1.2, ::reset function is deprecated.
It is replaced by ::flush
(This is the change in GstVideoDecoder of gst-plugin-base,
which is base class of gstomxvideodec)

refs #54088
Signed-off-by: Hung Tran <hung.tran.jy@rvc.renesas.com>
---
 omx/gstomxvideodec.c |   13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index 1c3a64c..746b92d 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -3,6 +3,7 @@
  *   Author: Sebastian Dröge <sebastian.droege@collabora.co.uk>, Collabora Ltd.
  * Copyright (C) 2013, Collabora Ltd.
  *   Author: Sebastian Dröge <sebastian.droege@collabora.co.uk>
+ * Copyright (C) 2014, Renesas Electronics Corporation
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
@@ -651,7 +652,7 @@ static gboolean gst_omx_video_dec_start (GstVideoDecoder * decoder);
 static gboolean gst_omx_video_dec_stop (GstVideoDecoder * decoder);
 static gboolean gst_omx_video_dec_set_format (GstVideoDecoder * decoder,
     GstVideoCodecState * state);
-static gboolean gst_omx_video_dec_reset (GstVideoDecoder * decoder,
+static gboolean gst_omx_video_dec_flush (GstVideoDecoder * decoder,
     gboolean hard);
 static GstFlowReturn gst_omx_video_dec_handle_frame (GstVideoDecoder * decoder,
     GstVideoCodecFrame * frame);
@@ -698,7 +699,7 @@ gst_omx_video_dec_class_init (GstOMXVideoDecClass * klass)
   video_decoder_class->close = GST_DEBUG_FUNCPTR (gst_omx_video_dec_close);
   video_decoder_class->start = GST_DEBUG_FUNCPTR (gst_omx_video_dec_start);
   video_decoder_class->stop = GST_DEBUG_FUNCPTR (gst_omx_video_dec_stop);
-  video_decoder_class->reset = GST_DEBUG_FUNCPTR (gst_omx_video_dec_reset);
+  video_decoder_class->flush = GST_DEBUG_FUNCPTR (gst_omx_video_dec_flush);
   video_decoder_class->set_format =
       GST_DEBUG_FUNCPTR (gst_omx_video_dec_set_format);
   video_decoder_class->handle_frame =
@@ -1490,7 +1491,7 @@ gst_omx_video_dec_loop (GstOMXVideoDec * self)
   g_assert (acq_return == GST_OMX_ACQUIRE_BUFFER_OK);
 
   /* This prevents a deadlock between the srcpad stream
-   * lock and the videocodec stream lock, if ::reset()
+   * lock and the videocodec stream lock, if ::flush()
    * is called at the wrong time
    */
   if (gst_omx_port_is_flushing (self->dec_out_port)) {
@@ -2153,7 +2154,7 @@ gst_omx_video_dec_set_format (GstVideoDecoder * decoder,
 }
 
 static gboolean
-gst_omx_video_dec_reset (GstVideoDecoder * decoder, gboolean hard)
+gst_omx_video_dec_flush (GstVideoDecoder * decoder, gboolean hard)
 {
   GstOMXVideoDec *self;
 
@@ -2161,7 +2162,7 @@ gst_omx_video_dec_reset (GstVideoDecoder * decoder, gboolean hard)
 
   /* FIXME: Handle different values of hard */
 
-  GST_DEBUG_OBJECT (self, "Resetting decoder");
+  GST_DEBUG_OBJECT (self, "Flushing decoder");
 
   gst_omx_port_set_flushing (self->dec_in_port, 5 * GST_SECOND, TRUE);
   gst_omx_port_set_flushing (self->dec_out_port, 5 * GST_SECOND, TRUE);
@@ -2186,7 +2187,7 @@ gst_omx_video_dec_reset (GstVideoDecoder * decoder, gboolean hard)
     gst_pad_start_task (GST_VIDEO_DECODER_SRC_PAD (self),
         (GstTaskFunction) gst_omx_video_dec_loop, decoder, NULL);
 
-  GST_DEBUG_OBJECT (self, "Reset decoder");
+  GST_DEBUG_OBJECT (self, "Flush decoder");
 
   return TRUE;
 }
-- 
1.7.9.5

